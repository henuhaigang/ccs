apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext {
	moduleName="ccs";
	moduleVersion="1.0-SNAPSHOT"
	publishUserName = "runnerdev"
    publishUserPassword = "runnerdev"
    publishURL = "http://10.1.228.199:18081/nexus/content/repositories/snapshots/"    
    //mavenPublicURL = "http://10.1.228.199:18081/nexus/content/groups/public/"
	builtBy="gradle 2.2" 
} 

group = 'com.gaogang.ccs'

repositories {
    maven{ url "http://10.1.228.199:18081/nexus/content/groups/public/"  }
}

dependencies{
 compile ('org.apache.curator:curator-framework:2.10.0'){
        exclude group: "org.slf4j", module: "slf4j-api"
        exclude group: "log4j", module: "log4j"
    }
    compile ('org.apache.curator:curator-recipes:2.10.0'){
            exclude group: "org.slf4j", module: "slf4j-api"
            exclude group: "log4j", module: "log4j"
    }
}

sourceSets {
    main {
        java { srcDirs = ['src/main/java']}
        resources { srcDirs = ['src/main/resources']}
    }
    test {
        java { srcDirs = ['src/test/java']}
        resources { srcDirs = ['src/test/resources']}
    }
}

jar {
    baseName baseName
    version moduleVersion
    destinationDir file("$buildDir/m-libs/")
    manifest {
        attributes 'packageName': baseName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss')
    }
}
/*
task copyChildJar(type: jar) {
    from fileTree(dir: '$buildDir/classes/main')
    destinationDir file("$buildDir/")
}
*/

task copy3rdJars(type: Copy) {
	from configurations.runtime
	destinationDir file("$buildDir/libs/3rd-libs")
}
task copySubProjectsJar(type: Copy) {
   
        from jar
        destinationDir file("$buildDir/libs/core-libs")
    
}
task copySubProjectsConfig(type: Copy) {
    from fileTree(dir: 'src/main/resources')
    destinationDir file("$buildDir/config")
}

/*
task cleanTempDir(type: Delete) {
    delete fileTree(dir: "$buildDir/libs", include: "com.ai.runner.center.ctp.rtm*")
}
*/

build.dependsOn copy3rdJars,copySubProjectsConfig,copySubProjectsJar

publishing {
    publications {
       publishing.publications.create("${moduleName}", MavenPublication) {
            groupId group
            artifactId moduleName
            version moduleVersion
            artifact  jar
            pom.withXml {
	            asNode().children().last() + {
	                delegate.dependencies {
	               
	                }
	            }
	        }
        }
    }
    repositories {
        maven {
            url  publishURL
            credentials {
                username = publishUserName
                password = publishUserPassword
            }
        }
    }
}
